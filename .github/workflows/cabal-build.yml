name: cabal-build

on:
  push:
    branches: master
  pull_request:
    branches: master

permissions:
  contents: read

jobs:
  cabal-build:
    name: "GHC ${{ matrix.ghc-version }} on ${{ matrix.os }} (lens: ${{ matrix.lens }})"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        ghc-version: ["9.12", "9.10", "9.6", "9.2"]
        lens: [true, false]
        exclude:
          - os: macos-latest
            ghc-version: "9.2"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up GHC ${{ matrix.ghc-version }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}
          # Defaults, added for clarity:
          cabal-version: "latest"
          cabal-update: true

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt update
          sudo apt install -y x11proto-xext-dev libx11-dev xorg-dev freeglut3-dev

      - name: Configure the build
        if: matrix.lens
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Configure the build (no lens)
        if: ${{ !matrix.lens }}
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation -fdisable-lens
          cabal build --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Build
        run: cabal build all

      # - name: Run tests
      #   run: cabal test all

      - name: Check cabal file
        run: cabal check
